{"version":3,"sources":["supabaseClient.js","App.jsx","index.js"],"names":["supabase","createClient","App","session","setSession","useState","messages","setMessages","newMessages","setNewMessages","usersOnline","setUserOnline","chatContainerRef","useRef","useEffect","auth","getSession","then","_ref","data","subscription","onAuthStateChange","_event","unsubscribe","console","log","signIn","async","signInWithOAuth","provider","signOut","error","message","_session$user","user","roomOne","channel","config","presence","key","id","on","event","payload","prevMessages","subscribe","_session$user2","status","track","state","presenceState","Object","keys","sendMessage","_session$user3","_session$user3$user_m","_session$user4","_session$user4$user_m","e","preventDefault","send","type","user_name","user_metadata","email","avatar","avatar_url","timestamp","Date","toISOString","_session$user5","_session$user5$user_m","setTimeout","current","scrollTop","scrollHeight","React","createElement","className","full_name","length","onClick","ref","map","msg","idx","_session$user6","_session$user7","_session$user8","_session$user9","_session$user10","isoString","src","alt","toLocaleTimeString","hour","minute","hour12","onSubmit","value","onChange","target","placeholder","ReactDOM","createRoot","document","getElementById","render","Apps"],"mappings":"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","file":"static/js/main.c7e654bb.chunk.js","sourcesContent":["import { createClient } from \"@supabase/supabase-js\"; \r\n\r\nconst supabaseUrl = \"https://wnovshdbuptvlpjdmebs.supabase.co\";\r\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Indub3ZzaGRidXB0dmxwamRtZWJzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyOTkwMjQsImV4cCI6MjA1OTg3NTAyNH0.XGnuY84t-gAckLF4kas-e9lrslpMcuuwytyQsm6QU1g\";\r\n\r\nexport const supabase= createClient(supabaseUrl, supabaseAnonKey);","import { useEffect, useState, useRef } from \"react\";\nimport { supabase } from \"./supabaseClient\";\nimport React from 'react';\n\nfunction App() {\n  const [session, setSession] = useState([]);\n  const[messages, setMessages] = useState([]);\n  const[newMessages, setNewMessages] = useState(\"\");\n  const[usersOnline, setUserOnline] = useState([]);\n  const chatContainerRef= useRef(null);\n\n  \n  useEffect(() => { \n\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session)\n    })\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session)\n    })\n    return () => subscription.unsubscribe()\n  }, [])\n\n  console.log(session);\n\n  //sign in\n  const signIn = async()=>{\n    await supabase.auth.signInWithOAuth({\n      provider:\"google\",\n    });\n  };\n\n  //sign out\n  const signOut = async()=>{\n    const {error}= await supabase.auth.signOut();\n    if(error){\n      console.log(\"Sign-out error\",error.message);\n    }\n  };\n\n  useEffect(() =>{\n    if(!session?.user){\n      setUserOnline([]);\n      return;\n    }\n \n    const roomOne = supabase.channel(\"room_one\",{\n      config:{\n        presence:{\n          key: session?.user?.id,\n        },\n      },\n    });\n\n    roomOne.on(\"broadcast\", {event:\"message\"}, (payload)=>{\n      setMessages((prevMessages)=> [...prevMessages, payload.payload])\n      console.log(messages);\n    });\n\n    //track user presence\n    roomOne.subscribe(async(status)=>{\n      if(status===\"SUBSCRIBED\"){\n        await roomOne.track({\n          id:session?.user?.id,\n        });\n      }\n    });\n\n    //handle user presence\n    roomOne.on(\"presence\", {event:\"sync\"}, ()=>{\n      const state=roomOne.presenceState();\n      setUserOnline(Object.keys(state));\n    });\n\n    return() =>{\n      roomOne.unsubscribe();\n    };\n  }, [session]); \n\n  // send message\n  const sendMessage = async(e)=>{\n    e.preventDefault()\n    supabase.channel(\"room_one\").send({\n      type:\"broadcast\",\n      event:\"Message\",\n      payload:{\n        message:newMessages,\n        user_name:session?.user?.user_metadata?.email,\n        avatar:session?.user?.user_metadata?.avatar_url,\n        timestamp: new Date().toISOString(),\n      },\n    });\n    setNewMessages(\"\");\n  }\n\n  const formatTime=(isoString)=>{\n    return new Date(isoString).toLocaleTimeString(\"en-us\",{\n      hour:\"numeric\",\n      minute:\"2-digit\",\n      hour12:false,\n\n    })\n  }\n  useEffect(()=>{\n    setTimeout(() =>{\n      if(chatContainerRef.current){\n        chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;\n      }\n    }, [100])\n  },[messages])\n\n      if(!session){\n        return(\n          <div className=\"w-full flex h-screen justify-center items-center p-4\">\n            <button onClick={signIn}>Sign in with Google</button>\n          </div>\n        );\n      }\n      else{  return (\n    <div className=\"w-full flex h-screen justify-center items-center p-4\">\n      <div className=\"border-[1px] border-gray-700 max-w-6xl w-full min-h-[600px] rounded-lg\">\n        {/* HEADER */}\n        <div className=\"flex justify-between h-20 border-b-[1px] border-gray-700\">\n          <div className=\"p-4\">\n            <p className=\"text-gray-300\">Signed in as name: {session?.user?.user_metadata?.full_name}</p>\n            <p className=\"text-gray-300 italic text-sm\">{usersOnline.length} user online</p>\n          </div>\n          <button onClick={signOut} className=\"m-2 sm:mr-4 text-white\" >Sign Out</button>\n        </div>\n        {/* Main Chat Here */}\n        <div ref={chatContainerRef} className=\"p-4 flex flex-col overflow-y-auto h-[500px]\">\n          {messages.map((msg, idx) =>(\n            <div \n            key={idx}\n            className={`my-2 flex w-full items-start ${\n              msg?.user_name === session?.user?.email ?  \"justify-end\" : \"justify-start\"\n            }`}>\n                {/*received message avatar*/}\n\n                {msg.user_name !==session?.user?.email &&\n                (<img src={msg.avatar} alt=\"U2\" className=\"w-10 h-10 rounded-full mr-2\"/>)\n                }\n                <div className=\"flex flex-col w-full\">\n                  <div className={`p-1 max-w-[70%] rounded -xl ${\n                    msg.user_name === session?.user?.email ? \"bg-gray-700 text-white ml-auto\" : \n                    \"bg-gray-500 text-white mr-auto\"\n                  }`}>\n                  <p>{msg.message}</p>\n                  </div>\n                  {/* time stamp*/}\n                    <div className={`text-xs opacity-75 pt-1 ${msg?.user_name === session?.user?.email? \"text-right mr-2\" : \"text-left-ml-2\"\n                    }`}\n                    >\n                      {formatTime(msg?.timestamp)}\n                      </div>\n                </div>\n                  {msg.user_name===session?.user?.email &&(\n                    <img src={msg.avatar} alt=\"U2\" className=\"w-10 h-10 rounded-full ml-2\"/>\n                  )}\n\n            </div>\n          ))}\n        </div>\n        {/* message input*/}\n        <form  onSubmit={sendMessage} className=\"flex flex-col sm:flex-row p-4 border-t-[1px] border-gray-700\">\n            <input value={newMessages} onChange={(e) => setNewMessages(e.target.value)} type=\"text\" placeholder=\"Type a message...\" className=\"p-2 w-full bg-[#00000040] rounded-lg\" />\n              <button className=\"mt-4 sm:mt-0 sm:ml-8 text-white max-h-12\">Send</button>\n              <span></span>\n        </form>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App.jsx\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n\r\nfunction Apps() {\r\n    return <h1>Hello from React 👋</h1>;\r\n  }\r\n  \r\n  export default Apps;\r\n  "],"sourceRoot":""}